import logging

from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import ContextTypes

from constants.keyboards import (admin_main_menu_keyboard,
                                 user_main_menu_keyboard)
from constants.messages_text import welcome_text
from constants.some_constants import admins_id, group_id
from db_depart.user_db import get_user, update_user_in_db
from functions.inline_buttons import extra_inline_button, set_inline_keyboard
from functions.mail_sender import send_email
from pwd_generator import get_current_directory


async def user_form_information_process(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user = await get_user(user_id)
    user_inf_db = user['user_inf']
    

    if '–ó–∞–ø—Ä–æ—Å full –¥–∞–Ω–Ω—ã—Ö' in context.user_data:
        context.user_data.pop('–ó–∞–ø—Ä–æ—Å full –¥–∞–Ω–Ω—ã—Ö')
        warning_text = '–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–µ–∂–¥–µ, —á–µ–º –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é.\n–ü—Ä–æ—Ü–µ—Å—Å –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω.\n–î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.'
        await context.bot.send_message(chat_id=user_id, text=warning_text)

    # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –∑–∞–ø–æ–ª–Ω—è–ª –∞–Ω–∫–µ—Ç—É –∏ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª –µ–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å
    # —Ç–æ–≥–¥–∞ –º—ã –ø—Ä–µ—Ä—ã–≤–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞

    if 'information_form' not in context.user_data:
        context.user_data['information_form'] = {}
    user_inf = context.user_data['information_form']
    try:
        current_text = update.message.text
    except Exception:
        current_text = None
        context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'

    
    step = {
        '–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è': ('–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã', None),
        '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞': ('–§–ò–û', None),
        
        '–§–ò–û': ('–†–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å', '–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—é–º–µ?'),
        '–†–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å': ('–ü—Ä–æ–≤–µ—Ä–∫–∞ pdf —Ñ–∞–π–ª–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .pdf'),
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ pdf —Ñ–∞–π–ª–∞': ('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', '–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'),

        '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã': ('–§–ò–û', '–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—é–º–µ?'),
        '–î–æ–ø —Ä–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å': ('–î–æ–ø pdf —Ñ–∞–π–ª', None),
        '–î–æ–ø pdf —Ñ–∞–π–ª': ('–†–µ–∑—é–º–µ', None),
        
        '–†–µ–∑—é–º–µ': ('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', '–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'),
        '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞': ('email', '–í–∞—à —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å:'),
        'email': ('–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å:'),
        '–î–æ–ª–∂–Ω–æ—Å—Ç—å': ('–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã', '–í–∞—à —Å—Ç–∞–∂:'),
        '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã': ('–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:'),
        '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': ('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', None),
        '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ': ('done', None),
        'done': (None, None)
    }
    save_steps = [
        '–§–ò–û', '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'email', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
        ]

    current_step = context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö']
    
    if current_text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or current_text == '–ù–∞–∑–∞–¥':
        
        context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        context.user_data.pop('–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
        
        admin_check = user_id in admins_id
        if admin_check:
            context.user_data['admin_status'] = True
            buttons_list = admin_main_menu_keyboard
        else:
            buttons_list = user_main_menu_keyboard

        keyboard = [
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text('–í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=reply_markup)
        await set_inline_keyboard(update, context, buttons_list = buttons_list, message_text = welcome_text)
        return
    
    if current_step in save_steps:
        context.user_data['information_form'][current_step] = current_text
        await update_user_in_db(user_id, user_inf={current_step:current_text})

    print(context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'])
    print(current_step) 
    next_step, message_text = step[current_step]
    context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = next_step

    if current_step.__eq__('–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'):

        if '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' in user_inf_db:
                message_text = '–£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ,\n–º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ –æ—Ç–∫–ª–∏–∫–µ\n–∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ?'
                keyboard = [
                    ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –º–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏'],
                    ['–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ']
                ]
                reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
                await context.bot.send_message(chat_id=user_id, text=message_text, reply_markup=reply_markup)
        else:

            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞'

            text_wait = (
            '–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±–æ—Ç–∞,\n–∞ –æ–Ω –±–µ—Ä–µ–∂–Ω–æ —Å–æ–±–µ—Ä–µ—Ç –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç—É üì†\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.'
        )

            keyboard = [
                ['–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚úÖ'],
                ['–ù–∞–∑–∞–¥']
            ]

            project_folder = await get_current_directory()
            pdf_path = project_folder + '/constants/soglasie-na-obrabotku-dannykh.docx'
            with open(pdf_path, 'rb') as pdf_file:
                await context.bot.send_document(chat_id=user_id, document=pdf_file, filename='–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.docx')

            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text=text_wait, reply_markup=reply_markup)

    
    elif current_step.__eq__('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞'):
        text = '–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–∞—à–∏ –§–ò–û:'
        keyboard = [
            ['–ù–∞–∑–∞–¥']
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        if current_text.__eq__('–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚úÖ'):
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
        
        else:
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
            context.user_data.pop('–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
            
            admin_check = user_id in admins_id
            if admin_check:
                context.user_data['admin_status'] = True
                buttons_list = admin_main_menu_keyboard
            else:
                buttons_list = user_main_menu_keyboard

            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text='–í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=reply_markup)
            await set_inline_keyboard(update, context, buttons_list = buttons_list, message_text = welcome_text)


    elif current_step.__eq__('–§–ò–û'):
        print(context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'])
        context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–†–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å'
        text = '–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—é–º–µ?'
        keyboard = [
                ['–î–∞'],
                ['–ù–µ—Ç'],
            ]

        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
    

    elif current_step.__eq__('check'):
        text = '–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–∞—à–∏ –§–ò–û:'
        keyboard = [
            ['–ù–∞–∑–∞–¥']
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        if current_text.__eq__('–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚úÖ'):
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

        else:
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
            context.user_data.pop('–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
            
            admin_check = user_id in admins_id
            if admin_check:
                context.user_data['admin_status'] = True
                buttons_list = admin_main_menu_keyboard
            else:
                buttons_list = user_main_menu_keyboard

            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text='–í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=reply_markup)
            await set_inline_keyboard(update, context, buttons_list = buttons_list, message_text = welcome_text)


    elif next_step.__eq__('–†–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å'):
        text = '–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—é–º–µ?'
        keyboard = [
                ['–î–∞'],
                ['–ù–µ—Ç'],
            ]

        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

    elif current_step.__eq__('–†–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å'):
        
        if current_text.__eq__('–î–∞'):
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ü—Ä–æ–≤–µ—Ä–∫–∞ pdf —Ñ–∞–π–ª–∞'
            text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .pdf'
            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]

            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

        elif current_text.__eq__('–ù–µ—Ç'):

            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
            text = '–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'
            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

    elif current_step.__eq__('–ü—Ä–æ–≤–µ—Ä–∫–∞ pdf —Ñ–∞–π–ª–∞'):
        document = update.message.document
        file_name = document.file_name
        if not file_name.lower().endswith('.pdf'):
            await context.bot.send_message(chat_id=user_id, text='–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.', reply_markup=reply_markup)
            
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ü—Ä–æ–≤–µ—Ä–∫–∞ pdf —Ñ–∞–π–ª–∞'
            
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        new_file = await context.bot.get_file(document.file_id)
        project_pwd = await get_current_directory()
        file_path = f"downloads/{file_name}"
        context.user_data['pdf_path'] = f"{project_pwd}/{file_path}"

        await new_file.download_to_drive(file_path)
        
        context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        text = '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ!\n–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'
        keyboard = [
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)



    elif current_step.__eq__('–î–æ–ø —Ä–µ–∑—é–º–µ –≤–æ–ø—Ä–æ—Å'):
        
        if current_text.__eq__('–î–∞'):
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–î–æ–ø pdf —Ñ–∞–π–ª'
            text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .pdf'
            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]

            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

        elif current_text.__eq__('–ù–µ—Ç'):
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
            text = '–í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'
            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
    

    elif current_step.__eq__('–î–æ–ø pdf —Ñ–∞–π–ª'):
        document = update.message.document
        file_name = document.file_name
        if not file_name.lower().endswith('.pdf'):
            await context.bot.send_message(chat_id=user_id, text='–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.')
            
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–î–æ–ø pdf —Ñ–∞–π–ª'
            
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        new_file = await context.bot.get_file(document.file_id)
        project_pwd = await get_current_directory()
        file_path = f"downloads/{file_name}.pdf"
        context.user_data['pdf_path'] = project_pwd+file_path
        await new_file.download_to_drive(file_path)

        text = '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ.\n–£–∫–∞–∂–∏—Ç–µ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'
        context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        keyboard = [
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)


    elif current_step.__eq__('–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã'):

        keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True) 

        if current_text.__eq__('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –º–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏'):
            context.user_data.pop('–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
            
            final_text = (
                '–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –í–∞—à—É –∞–Ω–∫–µ—Ç—É –≤ —Ä–∞–±–æ—Ç—É. –°–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.\n'
                '–ú—ã –∏–∑—É—á–∏–º –≤–∞—à—É –∞–Ω–∫–µ—Ç—É –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏.\n'
                '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ª–∏—á–Ω–æ, –ø—Ä–æ—Å–∏–º\n–æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã: career@gehia.ru'
            )
            user_inf = user['user_inf']
            user_name = user_inf['–§–ò–û']
            vacancion_name = context.user_data['vacancy_name']

            phone = user_inf['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']
            email = user_inf['email']
            work = user_inf['–î–æ–ª–∂–Ω–æ—Å—Ç—å']
            exp = user_inf['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã']
            educ = user_inf['–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']

            place = user_inf['–†–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞']

            user_bio = (
                f'–†–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞: {place}\n\n'
                f'–§–ò–û: {user_name}\n'
                f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\n'
                f'Email: {email}\n'
                f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: {work}\n'
                f'–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {exp}\n'
                f'–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {educ}\n'
                )


            note_text = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n–û—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é: {vacancion_name}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ:\n{user_bio}'

                       

            await context.bot.send_message(chat_id=user_id, text='–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=reply_markup)
            await extra_inline_button(update, context, final_text,)

            pdf_path = None
            if 'pdf_path' in context.user_data:
                pdf_path = context.user_data['pdf_path']
            await send_email(
                subject = '–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é',
                body = note_text,
                to_email = 'rabota@ogk2.ru',
                pdf_file = pdf_path
            )
            await context.bot.send_message(chat_id=group_id, text=note_text)
            
            if 'pdf_path' in context.user_data:
                pdf_path = context.user_data['pdf_path']
                # –ï—Å–ª–∏ –µ—Å—Ç—å pdf —Ñ–∞–π–ª, —Ç–æ –º—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –µ–≥–æ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
                await send_pdf(update, context, pdf_path=pdf_path, chat_id=group_id, user_name=user_name)
            
                context.user_data.pop('pdf_path')

        elif current_text.__eq__('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ'):

            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞'

            text_wait = (
            '–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±–æ—Ç–∞,\n–∞ –æ–Ω –±–µ—Ä–µ–∂–Ω–æ —Å–æ–±–µ—Ä–µ—Ç –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç—É üì†\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.'
        )

            keyboard = [
                ['–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚úÖ'],
                ['–ù–∞–∑–∞–¥']
            ]

            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            
            project_folder = await get_current_directory()
            pdf_path = project_folder + '/constants/soglasie-na-obrabotku-dannykh.docx' 
            with open(pdf_path, 'rb') as pdf_file:
                await context.bot.send_document(chat_id=user_id, document=pdf_file, filename='–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.docx')  
            await context.bot.send_message(chat_id=user_id, text=text_wait, reply_markup=reply_markup)

    elif next_step.__eq__('email'):
        logging.info(f'–¢–ï–ö–£–©–ò–ô –®–ê–ì {current_step} –∞ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è {current_text}')
        text = '–í–∞—à —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å:'
        keyboard = [
        ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
        ]

        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

    elif next_step.__eq__('–î–æ–ª–∂–Ω–æ—Å—Ç—å'):
        text = '–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å:'
        keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]

        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)

    elif next_step.__eq__('–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã'):
        text = '–í–∞—à —Å—Ç–∞–∂:'
        keyboard = [
        ['–º–µ–Ω–µ–µ 1 –≥–æ–¥–∞'],
        ['1-2 –≥–æ–¥–∞'],
        ['2-3 –≥–æ–¥–∞'],
        ['3+ –ª–µ—Ç']
        
    ]

        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)


    elif next_step.__eq__('–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'):
        text = '–í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:'
        keyboard = [
        ['–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'],
        ['–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ'],
        ['–®–∫–æ–ª—å–Ω–æ–µ'],

    ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
    
    elif next_step.__eq__('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'):
        keyboard = [
        ['–í—Å—ë –≤–µ—Ä–Ω–æ!‚úÖ'],
        ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'],
        ]
        user_inf = context.user_data['information_form']
        full_name = user_inf['–§–ò–û']
        phone = user_inf['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']
        email = user_inf['email']
        work = user_inf['–î–æ–ª–∂–Ω–æ—Å—Ç—å']
        exp = user_inf['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã']
        educ = user_inf['–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']
        
        user_bio = (
            f'<b>–§–ò–û:</b>\n{full_name}\n\n'
            f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>\n{phone}\n\n'
            f'<b>Email:</b>\n{email}\n\n'
            f'<b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b>\n{work}\n\n'
            f'<b>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:</b>\n{exp}\n\n'
            f'<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b>\n{educ}\n\n'
            )
        logging.info(user_bio)
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await context.bot.send_message(chat_id=user_id, text=user_bio, reply_markup=reply_markup, parse_mode='HTML')
    
    elif current_step.__eq__('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'):
        if current_text.__eq__('–í—Å—ë –≤–µ—Ä–Ω–æ!‚úÖ'):
            context.user_data.pop('–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
            
            user_inf = context.user_data['information_form']
            final_text = (
                '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å! ‚ò∫Ô∏è –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π.\n\n'
                '–ï—Å–ª–∏ –≤–∞–º –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É rabota@ogk2.ru\n\n'
                '–ò–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É 8-800-30-20-10-9'
            )

            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]

            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text='–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=reply_markup)

            await extra_inline_button(update, context, final_text, user_id=user_id, parse_mode='Markdown')

            user_inf = user['user_inf']
            user_name = user_inf['–§–ò–û']
            vacancion_name = context.user_data['vacancy_name']


            phone = user_inf['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']
            email = user_inf['email']
            work = user_inf['–î–æ–ª–∂–Ω–æ—Å—Ç—å']
            exp = user_inf['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã']
            educ = user_inf['–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']
            
            place = user_inf['–†–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞']

            user_bio = (
                f'–†–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞: {place}\n\n'
                f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\n'
                f'Email: {email}\n'
                f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: {work}\n'
                f'–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {exp}\n'
                f'–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {educ}\n'
                )


            note_text = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n–û—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é: {vacancion_name}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ:\n{user_bio}'


            pdf_path = None
            if 'pdf_path' in context.user_data:
                pdf_path = context.user_data['pdf_path']
            await send_email(
                subject = '–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é',
                body = note_text,
                to_email = 'rabota@ogk2.ru',
                pdf_file = pdf_path
            )
            await context.bot.send_message(chat_id=group_id, text=note_text)
            if 'pdf_path' in context.user_data:
                pdf_path = context.user_data['pdf_path']
                # –¢–∞ –∂–µ —Ç–µ–º–∞ —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ–¥–Ω–æ–≥–æ —Å–º—Å, –∞ –Ω–µ –¥–≤—É—Ö, –∫–∞–∫ –¥–µ–ª–∞–ª–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º —á–∞—Ç–µ
                await send_pdf(update, context, pdf_path=pdf_path, chat_id=group_id, user_name=user_name)
            
                context.user_data.pop('pdf_path')

        else:
            context.user_data['–ó–∞–ø—Ä–æ—Å –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'] = '–§–ò–û'
            keyboard = [
                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await context.bot.send_message(chat_id=user_id, text='–¢–æ–≥–¥–∞ –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞.\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –§–ò–û:', reply_markup=reply_markup)


async def send_pdf(update, context, pdf_path, chat_id, user_name):
    # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É PDF-—Ñ–∞–π–ª—É
    pdf_file_path = pdf_path
    pdf_name = f'–†–µ–∑—é–º–µ {user_name}.pdf'
    with open(pdf_file_path, 'rb') as pdf_file:
        await context.bot.send_document(chat_id=chat_id, document=pdf_file, filename=pdf_name)